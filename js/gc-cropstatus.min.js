"use strict";const gcCropstatusLocales={en:{options:{title:"Crop status"},description:{id:"ID",parcel:"Parcel",sdate:"Sensing date"},legend:{uncultivated_area:"uncultivated area",area_under_crops:"area under crops",fraction_under_crops:"fraction under crops"}},de:{options:{title:"Feldzustand"},description:{id:"Nr",parcel:"Feld",sdate:"Aufnahmedatum"},legend:{uncultivated_area:"unbewirtschaftete Fläche",area_under_crops:"bewirtschaftete Fläche",fraction_under_crops:"Anteil bewirtschafteter Fläche"}}};Vue.component("gc-cropstatus",{props:{gcWidgetId:{type:String,default:"cropstatus1",required:!0},gcApikey:{type:String,default:"39553fb7-7f6f-4945-9b84-a4c8745bdbec"},gcHost:{type:String,default:"geocledian.com"},gcProxy:{type:String,default:void 0},gcApiBaseUrl:{type:String,default:"/agknow/api/v3"},gcApiSecure:{type:Boolean,default:!0},gcParcelId:{default:-1},gcSelectedDate:{type:String,default:""},gcMode:{type:String,default:"gauge"},gcAvailableOptions:{type:String,default:"title,description,dateSelector,legend"},gcWidgetCollapsed:{type:Boolean,default:!0},gcLanguage:{type:String,default:"en"},gcLegendPosition:{type:String,default:"inset"}},template:'<div :id="gcWidgetId" class="gc-cropstatus" style="max-width: 18.0rem; min-width: 8rem;">       \n\n              <p class="gc-options-title is-size-6 is-orange" style="cursor: pointer;" \n                v-on:click="toggleCropstatus"   \n                v-show="this.availableOptions.includes(\'title\')">\n                {{ $t(\'options.title\') }}\n                <i :class="[gcWidgetCollapsed ? \'\': \'is-active\', \'fas\', \'fa-angle-down\', \'fa-sm\']"></i>\n              </p>\n              <div :class="[gcWidgetCollapsed ? \'\': \'is-hidden\']">\n               <div class="is-flex">\n                <div :id="\'desc_\' + gcWidgetId" class="is-grey" v-show="this.availableOptions.includes(\'description\')">\n                  \x3c!-- span :id="\'title_\' + gcWidgetId" class="has-text-weight-bold is-size-6">Crop status</span><br --\x3e\n                  <span :id="\'subtitle_\' + gcWidgetId" class="has-text-weight-bold is-size-7">{{ $t(\'description.parcel\') }} {{ $t(\'description.id\') }} :{{this.currentParcelID}}</span><br>\n                  <span :id="\'sdate_\' + gcWidgetId" class="is-size-7" v-if="this.crop_status.hasOwnProperty(\'crop_status\')">{{ $t(\'description.sdate\') }}:{{this.crop_status.crop_status.sensing_date}}</span>\n                </div>\n\n                <div class="field-body is-horizontal" style="margin-left: 1em;"\n                    v-show="this.availableOptions.includes(\'dateSelector\')">\n                  <div class="control has-icons-left" style="padding-bottom: 0px; max-width: 6.4rem;">\n                    <input :id="\'inpSdate_\'+this.gcWidgetId" type="text" class="input is-small" placeholder="[YYYY-MM-DD]"\n                      v-model="selectedDate">\n                    <span class="icon is-small is-left">\n                      <i class="fas fa-clock fa-lg"></i>\n                    </span>\n                  </div>\n                </div>\n                </div>\n                \x3c!-- watermark --\x3e\n                <div :class="[this.availableOptions.includes(\'nologo\') ? \'is-hidden\': \'is-inline-block\', \'is-pulled-right\']"\n                  style="opacity: 0.65;">\n                  <span style="vertical-align: top; font-size: 0.7rem;">powered by</span><br>\n                  <img src="img/logo.png" alt="geo|cledian" style="width: 100px; margin: -10px 0;">\n                </div>\n               </div>\n\n                <div :id="\'chartNotice_\'+gcWidgetId" class="content is-hidden"></div>\n\n                <div :id="\'chartSpinner_\'+gcWidgetId" class="chartSpinner spinner is-hidden">\n                  <div class="rect1"></div>\n                  <div class="rect2"></div>\n                  <div class="rect3"></div>\n                  <div class="rect4"></div>\n                  <div class="rect5"></div>\n                </div>\n\n                <div style="position: relative;">\n                  <div :id="\'chart_\'+gcWidgetId" :class="[\'gc-cropstatus-chart-\'+this.gcMode]" style="max-height: 160px!important;">\n                  </div>\n                </div>\n              </div>\n          </div>\n          \x3c!-- chart --\x3e',data:function(){return{chart:void 0,parcels:[],apiKey:this.gcApikey,apiHost:this.gcHost,apiUrl:"https://"+this.gcHost+"/agknow/api/v3",offset:0,pagingStep:6e3,total_parcel_count:250,crop_status:{},inpSdatePicker:void 0,internalSelectedDate:""}},computed:{apiKey:{get:function(){return this.gcApikey}},apiHost:{get:function(){return this.gcHost}},apiBaseUrl:{get:function(){return this.gcApiBaseUrl}},apiSecure:{get:function(){return this.gcApiSecure}},currentParcelID:{get:function(){return this.gcParcelId},set:function(newValue){this.gcParcelId=newValue}},selectedDate:{get:function(){if(this.gcSelectedDate.length>0){if(this.isDateValid(this.gcSelectedDate))return this.gcSelectedDate}else if(this.isDateValid(this.internalSelectedDate))return this.internalSelectedDate},set:function(value){console.debug("selectedDate - setter: "+value),this.isDateValid(value)&&(this.$root.$emit("queryDateChange",value),this.internalSelectedDate=value)}},availableOptions:{get:function(){return this.gcAvailableOptions.split(",")}},currentLanguage:{get:function(){return this.gcLanguage}}},i18n:{locale:this.currentLanguage,messages:gcCropstatusLocales},created:function(){console.debug("cropstatus! - created()"),this.changeLanguage()},mounted:function(){try{this.changeLanguage()}catch(ex){}document.getElementById("chart_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById("chartSpinner_"+this.gcWidgetId).classList.remove("is-hidden"),this.chart=c3.generate({bindto:"#chart_"+this.gcWidgetId,data:{columns:[],type:this.gcMode},legend:{hide:this.availableOptions.includes("legend")?[]:["area under crops","uncultivated area","fraction under crops"],position:this.gcLegendPosition}}),this.gcParcelId>0&&(this.currentParcelID=this.gcParcelId,this.handleCurrentParcelIDchange()),this.availableOptions.includes("dateSelector")&&this.loadJSscript("css/bulma-ext/bulma-calendar.min.js",function(){this.inpSdatePicker=new bulmaCalendar(document.getElementById("inpSdate_"+this.gcWidgetId),{startDate:new Date(Date.parse(this.selectedDate)),dateFormat:"yyyy-mm-dd",lang:this.currentLanguage,overlay:!1,closeOnOverlayClick:!0,closeOnSelect:!0,onSelect:function(e){var a=new Date(e.valueOf()+864e5);this.selectedDate=a.toISOString().split("T")[0]}.bind(this)})}.bind(this))},watch:{currentParcelID:function(newValue,oldValue){console.debug("event - currentParcelIDChange"),this.handleCurrentParcelIDchange(newValue,oldValue)},selectedDate:function(newValue,oldValue){console.debug("event - sdateChange"),this.isDateValid(this.selectedDate)&&this.getCropStatus(this.getCurrentParcel().parcel_id,this.selectedDate)},crop_status:{handler:function(newValue,oldValue){console.debug("event - crop_statusChange"),this.createChartData()},deep:!0},currentLanguage(newValue,oldValue){this.changeLanguage(),this.createChartData()},gcMode(newValue,oldValue){"gauge"===newValue&&(this.gcLegendPosition="bottom"),this.createChartData()},gcLegendPosition(newValue,oldValue){"inset"===newValue&&"gauge"===this.gcMode&&(this.gcLegendPosition="bottom"),this.createChartData()}},methods:{getApiUrl:function(endpoint){let protocol="http";return this.apiSecure&&(protocol+="s"),this.gcProxy?protocol+"://"+this.gcProxy+this.apiBaseUrl+endpoint:protocol+"://"+this.gcHost+this.apiBaseUrl+endpoint+"?key="+this.apiKey},toggleCropstatus:function(){this.gcWidgetCollapsed=!this.gcWidgetCollapsed},handleCurrentParcelIDchange:function(){console.debug("methods - handleCurrentParcelIDchange"),this.currentParcelID>0&&(this.filterDetailData(),this.getCropStatus(this.getCurrentParcel().parcel_id,this.selectedDate))},filterDetailData:function(){console.debug("methods - filterDetailData")},getCurrentParcel:function(){return{parcel_id:this.currentParcelID}},getCropStatus:function(parcel_id,sdate){try{document.getElementById("sDate_"+this.gcWidgetId).classList.remove("is-hidden")}catch(ex){}try{document.getElementById("desc_"+this.gcWidgetId).classList.remove("is-hidden")}catch(ex){}document.getElementById("chartNotice_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById("chart_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById("chartSpinner_"+this.gcWidgetId).classList.remove("is-hidden");const endpoint="/parcels/"+parcel_id+"/status";let params="&sdate="+sdate,xmlHttp=new XMLHttpRequest,async=!0;console.debug("getCropStatus()"),console.debug("GET "+this.getApiUrl(endpoint)+params),this.chart.unload(),xmlHttp.onreadystatechange=function(){if(4==xmlHttp.readyState)try{var tmp=JSON.parse(xmlHttp.responseText);if("key is not authorized"==tmp.content){try{document.getElementById("sDate_"+this.gcWidgetId).classList.add("is-hidden")}catch(ex){}try{document.getElementById("desc_"+this.gcWidgetId).classList.add("is-hidden")}catch(ex){}return document.getElementById("chartNotice_"+this.gcWidgetId).innerHTML="Sorry, the given API key is not authorized!<br> Please contact <a href='https://www.geocledian.com'>geo|cledian</a> for a valid API key.",document.getElementById("chartNotice_"+this.gcWidgetId).classList.remove("is-hidden"),void document.getElementById("chartSpinner_"+this.gcWidgetId).classList.add("is-hidden")}if("api key validity expired"==tmp.content){try{document.getElementById("sDate_"+this.gcWidgetId).classList.add("is-hidden")}catch(ex){}try{document.getElementById("desc_"+this.gcWidgetId).classList.add("is-hidden")}catch(ex){}return document.getElementById("chartNotice_"+this.gcWidgetId).innerHTML="Sorry, the given API key's validity expired!<br> Please contact <a href='https://www.geocledian.com'>geo|cledian</a>for a valid API key.",document.getElementById("chartNotice_"+this.gcWidgetId).classList.remove("is-hidden"),void document.getElementById("chartSpinner_"+this.gcWidgetId).classList.add("is-hidden")}var row=this.getCurrentParcel();tmp.hasOwnProperty("crop_status")&&(this.crop_status=tmp)}catch(err){console.error(err);try{document.getElementById("sDate_"+this.gcWidgetId).classList.add("is-hidden")}catch(ex){}try{document.getElementById("desc_"+this.gcWidgetId).classList.add("is-hidden")}catch(ex){}document.getElementById("chartNotice_"+this.gcWidgetId).innerHTML="Sorry, an error occurred!<br>Please check the console log for more information.",document.getElementById("chartNotice_"+this.gcWidgetId).classList.remove("is-hidden"),document.getElementById("chartSpinner_"+this.gcWidgetId).classList.add("is-hidden")}}.bind(this),xmlHttp.open("GET",this.getApiUrl(endpoint)+params,!0),xmlHttp.send()},createChartData:function(){console.debug("createChartData()");let columns=[];if(this.crop_status.hasOwnProperty("crop_status")){if("pie"==this.gcMode||"donut"==this.gcMode){columns[0]=["area under crops"].concat(this.formatDecimal(this.crop_status.crop_status.area_under_crops,2));const uncultivated_area=this.crop_status.summary.area*(1-this.crop_status.crop_status.fraction_under_crops);columns[1]=["uncultivated area"].concat(this.formatDecimal(uncultivated_area,2))}"gauge"==this.gcMode&&(columns[0]=["fraction under crops"].concat(this.formatDecimal(100*this.crop_status.crop_status.fraction_under_crops,2))),document.getElementById("chartSpinner_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById("chart_"+this.gcWidgetId).classList.remove("is-hidden"),document.getElementById("chartNotice_"+this.gcWidgetId).classList.add("is-hidden"),this.createChart(columns)}},createChart:function(data){let color_options={};"gauge"==this.gcMode&&(color_options={pattern:["#FF0000","#F97600","#F6C600","#60B044"],threshold:{max:100,values:[25,50,75,100]}});let pie_options={},pie_color_options={};"pie"!=this.gcMode&&"donut"!=this.gcMode||(pie_options={label:{format:function(value,ratio,id){return this.formatDecimal(value,1)+" ha"}.bind(this)}},pie_color_options={"area under crops":"#60B044","uncultivated area":"#FF0000"}),this.chart=c3.generate({bindto:"#chart_"+this.gcWidgetId,data:{columns:[],type:this.gcMode,colors:pie_color_options,names:{"uncultivated area":this.$t("legend.uncultivated_area"),"area under crops":this.$t("legend.area_under_crops"),"fraction under crops":this.$t("legend.fraction_under_crops")}},pie:pie_options,color:color_options,transition:{duration:500},legend:{hide:this.availableOptions.includes("legend")?[]:["area under crops","uncultivated area","fraction under crops"],position:this.gcLegendPosition}}),this.chart.load({columns:data})},changeLanguage(){this.$i18n.locale=this.currentLanguage},removeFromArray:function(arry,value){let index=arry.indexOf(value);return index>-1&&arry.splice(index,1),arry},formatDecimal:function(decimal,numberOfDecimals){var factor=100;return isNaN(parseFloat(decimal))?NaN:(1==numberOfDecimals&&(factor=10),2==numberOfDecimals&&(factor=100),3==numberOfDecimals&&(factor=1e3),4==numberOfDecimals&&(factor=1e4),5==numberOfDecimals&&(factor=1e5),Math.ceil(decimal*factor)/factor)},capitalize:function(s){return"string"!=typeof s?"":s.charAt(0).toUpperCase()+s.slice(1)},isDateValid:function(date_str){return!isNaN(new Date(date_str))},loadJSscript:function(url,callback){let script=document.createElement("script");script.src=gcGetBaseURL()+"/"+url,script.async=!0,console.debug(script.src),document.body.appendChild(script),script.onload=function(){callback()}}},beforeDestroy:function(){window.removeEventListener("resize",this.triggerResize)}});